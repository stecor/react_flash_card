{"version":3,"sources":["components/QuizType.js","components/QuizBar.js","components/RandomWeighted.js","components/RegularCard.js","components/MultiCard.js","components/FlashCard.js","App.js","index.js"],"names":["library","add","faDumbbell","faFont","faFileAlt","faDice","QuizType","props","className","onClick","userChoice","quizType","icon","size","QuizBar","quizTypes","type","map","qt","i","key","RandomWeighted","question","questionData","service","common","cat","RegularCard","console","log","desc","Multicard","choices","options","option","answerIndex","indexOf","answer","answerLetter","faSpinner","FlashCard","flip","e","newFlip","state","flipclass","setState","newCard","path","cardStyle","apiHostRoot","axios","get","then","response","data","nowReady","this","ready","spin","card","MultiCard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d4c25f8.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDumbbell,faFont, faFileAlt, faDice } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nlibrary.add(faDumbbell);\nlibrary.add(faFont);\nlibrary.add(faFileAlt);\nlibrary.add(faDice);\n\nfunction QuizType(props){\n\n  return(\n\n      <li className=\"col-sm-3 text-center\">\n        <div className=\"nav-card\" onClick={()=>{props.userChoice(props.quizType)}}>\n          <FontAwesomeIcon icon={props.icon} size=\"4x\"/>\n          <span>{props.quizType}</span>\n        </div>\n      </li>\n  )\n}\n\nexport default QuizType;\n","import React from 'react';\nimport QuizType from './QuizType';\n\n// npm i --save @fortawesome/fontawesome-svg-core\n// npm i --save @fortawesome/free-solid-svg-icons\n// npm i --save @fortawesome/react-fontawesome\n\n\nfunction QuizBar(props){\n\n  const quizArray = [\n    {icon: \"dice\",type: \"Random\"},\n    {icon: \"file-alt\",type: \"Regular\"},\n    {icon: \"dumbbell\",type: \"Weighted\"},\n    {icon: \"font\",type: \"Multi\"},\n    ]\n\n    const quizTypes = quizArray.map((qt,i)=>{\n      return(\n        <QuizType key ={i} icon={qt.icon} quizType={qt.type} userChoice={props.userChoice}/>\n      )\n    })\n\n    return(\n      <div className=\"quiz-bar\">\n        <h1>Choose your study type</h1>\n        <ul className=\"nav nav-pills nav-fill\">\n          {quizTypes}\n        </ul>\n      </div>\n\n    )\n}\n\nexport default QuizBar;\n","import React from 'react';\n\nfunction RandomWeighted(props){\n\n  const question = props.questionData;\n\n  return(\n    <div>\n      <div className=\"card-back\">\n          <div>{question.service}</div>\n          <div className=\"commonality\">{question.common}</div>\n      </div>\n      <div className=\"card-front\">\n          <div>{question.cat}</div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default RandomWeighted;\n","import React from 'react';\n\nfunction RegularCard(props){\n  console.log(props.questionData);\n  const question = props.questionData;\n  return(\n    <div>\n      <div className=\"card-back\">\n          {question.service}\n      </div>\n      <div className=\"card-front\">\n          <div>{question.desc}</div>\n          <div>{question.cat}</div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default RegularCard;\n","import React from 'react';\n\nfunction Multicard(props){\n\n  const question = props.questionData;\n  console.log(question);\n  const choices =['a','b','c','d'];\n\n  const options = question.options.map((option,i)=>{\n    return(\n      <li key={i}>{choices[i]}. {option}</li>\n    )\n  })\n\n  const answerIndex = question.options.indexOf(question.answer);\n  const answerLetter = choices[answerIndex];\n\n  return(\n    <div>\n      <div className=\"card-back\">\n          <div>{question.service}</div>\n          <ul className=\"multi\">\n            {options}\n          </ul>\n      </div>\n      <div className=\"card-front\">\n          <div>{answerLetter}. {question.answer}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Multicard;\n","import React, { Component } from 'react';\nimport RandomWeighted from './RandomWeighted';\nimport RegularCard from './RegularCard';\nimport MultiCard from './MultiCard';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nlibrary.add(faSpinner);\n\nclass FlashCard extends Component {\n  constructor() {\n    super();\n    this.apiHostRoot = `https://aws-services.robertbunch.dev/services`;\n    this.state={\n      flipclass: \"\",\n      questionData: \"\",\n    }\n  }\n\n  componentDidMount(){\n    //this.newCard()\n  }\n\n  flip = (e) =>{\n    let newFlip = this.state.flipclass === \"\" ? \"flip\" : \"\";\n    this.setState({\n      flipclass: newFlip\n    })\n  }\n\n  newCard = () =>{\n    let path;\n    console.log(this.props.cardStyle);\n\n    const cardStyle = this.props.cardStyle;\n\n    if((cardStyle === 'Random')||(cardStyle === 'Regular')){\n      path = this.apiHostRoot+'/all';\n    }else if(cardStyle === 'Weighted'){\n      path = this.apiHostRoot+'/weighted';\n    }else{\n      path = this.apiHostRoot+'/multi';\n    }\n    axios.get(path).then((response)=>{\n      // console.log(response.data);\n      this.setState({\n        questionData: response.data,\n      })\n      this.props.nowReady();\n    })\n\n  }\n\n    render(){\n\n      if(!this.props.ready){\n        this.newCard();\n        return(\n          <div className=\"spinner-wrapper\">\n              <FontAwesomeIcon icon=\"spinner\" size=\"6x\" spin/>\n          </div>\n        )\n      }\n\n      const cardStyle = this.props.cardStyle;\n      let card;\n\n      if(cardStyle === 'Multi'){\n        card = <MultiCard questionData={this.state.questionData}/>\n      }else if(cardStyle === 'Regular'){\n        card = <RegularCard questionData={this.state.questionData}/>\n      }else{\n        card = <RandomWeighted questionData={this.state.questionData}/>\n      }\n\n      return(\n        <div >\n          <div className=\"row align-items-center card-holder\">\n           <div onClick={this.flip} className={`col-sm-6 offset-sm-3 card mb-3 ${this.state.flipclass}`}>\n              {card}\n           </div>\n          </div>\n          <button onClick={this.newCard}  className=\"btn btn-primary btn-lg\">Next Question!</button>\n        </div>\n      )\n    }\n\n}\n\nexport default FlashCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport QuizBar from './components/QuizBar';\nimport FlashCard from './components/FlashCard';\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state={\n      cardStyle: \"Random\",\n      ready: false,\n    }\n  }\n\n  userChoice=(cardStyle)=>{\n    this.setState({\n      cardStyle,\n        ready: false,\n    })\n  }\n\n  nowReady = () =>{\n    this.setState({\n      ready: true\n    })\n  }\n\n  render(){\n    console.log(this.state.cardStyle);\n    return(\n          <div className=\"App align-items-center d-flex\">\n            <div className=\"container\">\n              <QuizBar userChoice={this.userChoice}/>\n              <FlashCard cardStyle={this.state.cardStyle} nowReady={this.nowReady} ready={this.state.ready}/>\n            </div>\n          </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}